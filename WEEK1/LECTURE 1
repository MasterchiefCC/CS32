#include <iostream>

using namespace std;

class circle {
public:
	circle(double x, double y, double r);
	bool scale(double factor);
	void draw();
	double GetRadius();
private:
	//invariant m_r>0
	double m_x;
	double m_y;
	double m_r;
};

double area(circle a);


int main() {
	circle c(-2, 5, 10);
	c.scale(2);
	c.draw();
	cout << area(c);
	double sf;
	cin >> sf;
	if (!c.scale(sf)) {
		//deal with the problems
	}
}

circle::circle(double x, double y, double r) {
	if (r <= 0) {
		cout << "Cannot create a circle with negative radius";
		exit(1);
	}
	m_x = x;
	m_y = y;
	m_r = r;
}

bool circle::scale(double factor) {
	if (factor <= 0)
		return false;
	m_r *= factor;
	return true;
}

double circle::GetRadius(){
	return m_r;
}

double area(circle x) {
	return 3.1415926*x.GetRadius()*x.GetRadius();
}

/*
source file
↓
compiler
↓
object file eg. pictures.obj|| picture.o
↓
linker
↓
executable windows:xxx.exe||unix:a.out
*/
